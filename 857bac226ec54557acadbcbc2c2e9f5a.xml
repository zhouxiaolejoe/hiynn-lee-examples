<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration>-->
<!--    &lt;!&ndash; %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, &ndash;&gt;-->
<!--    &lt;!&ndash; appender是configuration的子节点，是负责写日志的组件。 &ndash;&gt;-->
<!--    &lt;!&ndash; ConsoleAppender：把日志输出到控制台 &ndash;&gt;-->
<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>%d %p (%file:%line\)- %m%n</pattern>-->
<!--            &lt;!&ndash; 控制台也要使用UTF-8，不要使用GBK，否则会中文乱码 &ndash;&gt;-->
<!--            <charset>UTF-8</charset>-->
<!--        </encoder>-->
<!--    </appender>-->
<!--    &lt;!&ndash; RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 &ndash;&gt;-->
<!--    &lt;!&ndash; 以下的大概意思是：1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是sys.log &ndash;&gt;-->
<!--    &lt;!&ndash;             2.如果日期没有发生变化，但是当前日志的文件大小超过1KB时，对当前日志进行分割 重命名&ndash;&gt;-->
<!--    <appender name="syslog"-->
<!--              class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <File>/home/zsl/log/bangke/credit.log</File>-->
<!--        &lt;!&ndash; rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 &ndash;&gt;-->
<!--        &lt;!&ndash; TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 &ndash;&gt;-->
<!--            &lt;!&ndash; 文件名：log/sys.2017-12-05.0.log &ndash;&gt;-->
<!--            <fileNamePattern>/home/zsl/log/bangke/%d/credit.%d.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 每产生一个日志文件，该日志文件的保存期限为30天 &ndash;&gt;-->
<!--            <maxHistory>360</maxHistory>-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                &lt;!&ndash; maxFileSize:这是活动文件的大小，默认值是10MB,本篇设置为1KB，只是为了演示 &ndash;&gt;-->
<!--                <maxFileSize>100KB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        <encoder>-->
<!--            &lt;!&ndash; pattern节点，用来设置日志的输入格式 &ndash;&gt;-->
<!--            <pattern>-->
<!--                %d %p (%file:%line\)- %m%n-->
<!--            </pattern>-->
<!--            &lt;!&ndash; 记录日志的编码 &ndash;&gt;-->
<!--            <charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;-->
<!--        </encoder>-->
<!--    </appender>-->
<!--    &lt;!&ndash; 控制台输出日志级别 &ndash;&gt;-->
<!--    <root level="info">-->
<!--        <appender-ref ref="STDOUT"/>-->
<!--    </root>-->
<!--    &lt;!&ndash; 指定项目中某个包，当有日志操作行为时的日志记录级别 &ndash;&gt;-->
<!--    &lt;!&ndash; shop.bangke.credit为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG &ndash;&gt;-->
<!--    &lt;!&ndash; 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  &ndash;&gt;-->
<!--    <logger name="shop.bangke.credit" level="DEBUG">-->
<!--        <appender-ref ref="syslog"/>-->
<!--    </logger>-->
<!--    &lt;!&ndash;<logger level="DEBUG">&ndash;&gt;-->
<!--    &lt;!&ndash;<appender-ref ref="syslog"/>&ndash;&gt;-->
<!--    &lt;!&ndash;</logger>&ndash;&gt;-->
<!--</configuration>-->